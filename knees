#!/usr/bin/env runhaskell

import Control.Arrow
import System.IO
import Data.Char
import Data.List
import System.Environment

main = do
    ls <- fmap lines $ hGetContents stdin
    length ls `seq` return ()
    
    let go :: String -> (Int, [String]) -> (Int, [String])
        go line (col, result)
           | thiscol == 0 ||
             not ("Step" `isPrefixOf` rest) = (col, result)
           | thiscol < col                  = (thiscol, line : result)
           | otherwise                      = (col, result)
          where (thiscol, rest) = first length $ span isSpace line
    
    putStr $ unlines $ snd $ foldr go (maxBound, []) ls
